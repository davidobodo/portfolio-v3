@import "#/styles/globals.module.scss";

/**
NOTE: Credits given to "https://dennissnellenberg.com/", for thinking about this
I just converted his already done implementation from plain html, css and javascript to React.
Definitely had to tweak some few things here and there though.
*/

.container {
	z-index: 25;
	position: fixed;
	pointer-events: none;
	transform: translate(-50%, -50%); // Center the box
	will-change: width;
	left: 0%;
	width: 0;
	transition: width 0.4s cubic-bezier(0.36, 0, 0.66, 0);

	&.active {
		width: 30rem;
		transition: width 0.4s cubic-bezier(0.34, 1, 0.64, 1); // When active class is being removed

		@media (min-width: $xl) {
			width: 45rem;
		}
	}

	&:before {
		display: block;
		content: "";
		padding-top: 100%;
	}

	.projectsListBoundary {
		overflow: hidden; // Ensures some elements are hidden;
		transition: all 0.5s cubic-bezier(0.65, 0, 0.35, 1);
		will-change: transform;
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;

		.projectsList {
			width: 100%;
			position: absolute;
			left: 0;
			top: 0;
			will-change: transform;

			.project {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				position: relative;
				width: 100%;
				display: block;
				overflow: hidden;
				width: 0;

				&.visible {
					width: 100%;
				}

				&:before {
					display: block;
					content: "";
					padding-top: 100%;
				}

				.overlayImage {
					position: absolute;
					top: 0;
					left: 0;
					height: 100%;
					width: 100%;
					background-position: center center;
					background-repeat: no-repeat;
					background-size: cover;
					display: flex;
					align-items: center;
					justify-content: center;

					.inner {
						width: 95%;
						height: 90%;
						background-color: transparent;
						display: block;
						background-position: center center;
						background-repeat: no-repeat;
						background-size: contain;
					}
				}
			}
		}
	}
}

.btn {
	width: 0;
	height: 0;
	border-radius: 50%;
	border: 0;
	background: var(--blue);
	position: fixed;
	z-index: 26;
	pointer-events: none;
	transform: translate(-50%, -60%);
	overflow: hidden;
	display: block;
	left: 0%;
	top: 0%;
	will-change: transform, width, height;
	transition: width 0.4s cubic-bezier(0.36, 0, 0.66, 0), height 0.4s cubic-bezier(0.36, 0, 0.66, 0);

	&.active {
		width: 8rem;
		height: 8rem;
		transition: width 0.4s cubic-bezier(0.34, 1, 0.64, 1), height 0.4s cubic-bezier(0.34, 1, 0.64, 1);
	}
}

.text {
	border-radius: 50%;
	border: 0;
	background: var(--blue);
	position: fixed;
	z-index: 26;
	pointer-events: none;
	transform: translate(-50%, -60%);
	overflow: hidden;
	display: block;
	transition: width 0.4s cubic-bezier(0.36, 0, 0.66, 0), height 0.4s cubic-bezier(0.36, 0, 0.66, 0);
	will-change: transform, width, height;
	background: transparent;
	color: var(--color-white);
	display: flex;
	justify-content: center;
	align-items: center;
	left: 0%;
	top: 0%;
	width: 0;
	height: 0;

	p {
		margin: 0;
		font-size: 0em;
		transition: font-size 0.4s cubic-bezier(0.36, 0, 0.66, 0);
		will-change: font-size;
	}

	&.active {
		height: clamp(3.75em, 5.5vw, 5em);
		width: clamp(10em, 27.5vw, 25em);
		transition: width 0.4s cubic-bezier(0.34, 1, 0.64, 1), height 0.4s cubic-bezier(0.34, 1, 0.64, 1);

		p {
			font-size: 1.6rem;
			transition: font-size 0.4s cubic-bezier(0.34, 1, 0.64, 1);
		}
	}
}
